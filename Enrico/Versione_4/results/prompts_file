
### ANSWER PROMPT ###

    You are a helpful smart assistant.
    You'll receive the results of the query, written in Cypher language: explain these results in a natural way.
    Please, be concise and synthetic. 
    


# QUESTION PROMPT 
    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Here's the database schema:

These are the relationship types
- CONTAINS
- SUBCLASSOF
- LOCATED_IN
- MEMBEROF

These are values for the 'name' property
- Lamp_1
- Lamp_3
- Lamp_2

Use only these Labels
- NamedIndividual
- Class
- Room

### CHAT HISTORY ### 


    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Which people live in Paris?
MATCH (p:Person)-[:LIVES_IN]->(c:City {name: 'Paris'}) RETURN p.name
Which books were published after the year 2000?
MATCH (b:Book) WHERE b.year > 2000 RETURN b.title
Who are the friends of John?
MATCH (p:Person {name: 'John'})-[:FRIEND_OF]-(f:Person) RETURN f.name
Which resources are related to something containing the word climate?
MATCH (r:Resource)-[:RELATED_TO]->(t:Topic) WHERE t.uri CONTAINS 'climate' RETURN r
Which employees work for companies based in Germany?
MATCH (e:Person)-[:WORKS_AT]->(c:Company)-[:BASED_IN]->(:Country {name: 'Germany'}) RETURN e.name
# QUESTION PROMPT 
    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Here's the database schema:

These are the relationship types
- CONTAINS
- SUBCLASSOF
- LOCATED_IN
- MEMBEROF

These are values for the 'name' property
- Television_1

Use only these Labels
- NamedIndividual
- Class
- Room

### CHAT HISTORY ### 


    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Which people live in Paris?
MATCH (p:Person)-[:LIVES_IN]->(c:City {name: 'Paris'}) RETURN p.name
Which books were published after the year 2000?
MATCH (b:Book) WHERE b.year > 2000 RETURN b.title
Who are the friends of John?
MATCH (p:Person {name: 'John'})-[:FRIEND_OF]-(f:Person) RETURN f.name
Which resources are related to something containing the word climate?
MATCH (r:Resource)-[:RELATED_TO]->(t:Topic) WHERE t.uri CONTAINS 'climate' RETURN r
Which employees work for companies based in Germany?
MATCH (e:Person)-[:WORKS_AT]->(c:Company)-[:BASED_IN]->(:Country {name: 'Germany'}) RETURN e.name
# QUESTION PROMPT 
    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Here's the database schema:

These are the relationship types
- CONTAINS
- SUBCLASSOF
- LOCATED_IN
- MEMBEROF

These are values for the 'name' property
- Ceiling_light_3
- Ceiling_light_2
- Ceiling_light_5
- Ceiling_light_4
- Ceiling_light_1

Use only these Labels
- NamedIndividual
- Class
- Room

### CHAT HISTORY ### 


    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Which people live in Paris?
MATCH (p:Person)-[:LIVES_IN]->(c:City {name: 'Paris'}) RETURN p.name
Which books were published after the year 2000?
MATCH (b:Book) WHERE b.year > 2000 RETURN b.title
Who are the friends of John?
MATCH (p:Person {name: 'John'})-[:FRIEND_OF]-(f:Person) RETURN f.name
Which resources are related to something containing the word climate?
MATCH (r:Resource)-[:RELATED_TO]->(t:Topic) WHERE t.uri CONTAINS 'climate' RETURN r
Which employees work for companies based in Germany?
MATCH (e:Person)-[:WORKS_AT]->(c:Company)-[:BASED_IN]->(:Country {name: 'Germany'}) RETURN e.name
# QUESTION PROMPT 
    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Here's the database schema:

These are the relationship types
- CONTAINS
- SUBCLASSOF
- LOCATED_IN
- MEMBEROF

These are values for the 'name' property
- Lamp_1
- Lamp_3
- Lamp_2

Use only these Labels
- NamedIndividual
- Class
- Room

### CHAT HISTORY ### 


    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Which people live in Paris?
MATCH (p:Person)-[:LIVES_IN]->(c:City {name: 'Paris'}) RETURN p.name
Which books were published after the year 2000?
MATCH (b:Book) WHERE b.year > 2000 RETURN b.title
Who are the friends of John?
MATCH (p:Person {name: 'John'})-[:FRIEND_OF]-(f:Person) RETURN f.name
Which resources are related to something containing the word climate?
MATCH (r:Resource)-[:RELATED_TO]->(t:Topic) WHERE t.uri CONTAINS 'climate' RETURN r
Which employees work for companies based in Germany?
MATCH (e:Person)-[:WORKS_AT]->(c:Company)-[:BASED_IN]->(:Country {name: 'Germany'}) RETURN e.name
# QUESTION PROMPT 
    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Here's the database schema:

These are the relationship types
- CONTAINS
- SUBCLASSOF
- LOCATED_IN
- MEMBEROF

These are values for the 'name' property
- Lamp_1
- Lamp_3
- Lamp_2

Use only these Labels
- NamedIndividual
- Class
- Room

### CHAT HISTORY ### 


    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Which people live in Paris?
MATCH (p:Person)-[:LIVES_IN]->(c:City {name: 'Paris'}) RETURN p.name
Which books were published after the year 2000?
MATCH (b:Book) WHERE b.year > 2000 RETURN b.title
Who are the friends of John?
MATCH (p:Person {name: 'John'})-[:FRIEND_OF]-(f:Person) RETURN f.name
Which resources are related to something containing the word climate?
MATCH (r:Resource)-[:RELATED_TO]->(t:Topic) WHERE t.uri CONTAINS 'climate' RETURN r
Which employees work for companies based in Germany?
MATCH (e:Person)-[:WORKS_AT]->(c:Company)-[:BASED_IN]->(:Country {name: 'Germany'}) RETURN e.name
# QUESTION PROMPT 
    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Here's the database schema:

These are the relationship types
- CONTAINS
- SUBCLASSOF
- LOCATED_IN
- MEMBEROF

These are values for the 'name' property
- Lamp_1
- Lamp_3
- Lamp_2

Use only these Labels
- NamedIndividual
- Class
- Room

### CHAT HISTORY ### 


    You are an expert Cypher generator: your task is to generate Cypher query that best answers the user question.
    
    Follow these guidelines:
    
    1. Always output a syntactically correct Cypher query. 
    2. Use only the node labels, relationship types, and property keys provided in the schema.
    3. Use specific names only if explicitly mentioned in the question.
    4. Do not invent properties or overly specific details.
    5. Keep queries syntactically correct, simple, and readable.
    6. Access node properties using dot notation (e.g., `n.name`).
    
    
Which people live in Paris?
MATCH (p:Person)-[:LIVES_IN]->(c:City {name: 'Paris'}) RETURN p.name
Which books were published after the year 2000?
MATCH (b:Book) WHERE b.year > 2000 RETURN b.title
Who are the friends of John?
MATCH (p:Person {name: 'John'})-[:FRIEND_OF]-(f:Person) RETURN f.name
Which resources are related to something containing the word climate?
MATCH (r:Resource)-[:RELATED_TO]->(t:Topic) WHERE t.uri CONTAINS 'climate' RETURN r
Which employees work for companies based in Germany?
MATCH (e:Person)-[:WORKS_AT]->(c:Company)-[:BASED_IN]->(:Country {name: 'Germany'}) RETURN e.name
